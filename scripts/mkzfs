#!/bin/bash

# add check for 5 arguments
[ $# = 6 ] || (echo "usage $0 wipedisk label partition pools disks path poolname type";exit 1)
wipedisk=$1; shift
label=$1; shift
partition=$1; shift
pools=$1; shift
disks=$1; shift
path=$1; shift
poolname=$1; shift
zpooltype=$1; shift

[ -z "${wipedisk}" ] && (echo "usage $0 wipedisk label partition pools disks path poolname type";exit 1)
[ -z "${label}" ] && (echo "usage $0 wipedisk label partition pools disks path poolname type";exit 1)
[ -z "${partition}" ] && (echo "usage $0 wipedisk label partition pools disks path poolname type";exit 1)
[ -z "${pools}" ] && (echo "usage $0 wipedisk label partition pools disks path poolname type";exit 1)
[ -z "${disks}" ] && (echo "usage $0 wipedisk label partition pools disks path poolname type";exit 1)
[ -z "${path}" ] && (echo "usage $0 wipedisk label partition pools disks path poolname poolname type";exit 1)
[ -z "${poolname}" ] && (echo "usage $0 wipedisk label partition pools disks path poolname type";exit 1)
[ -z "${zpooltype}" ] && (echo "usage $0 wipedisk label partition pools disks path poolname type";exit 1)

# Replace $type == "stripe" with empty string
[ "$zpooltype" == "stripe" ] && zpooltype=""
# Replace $partition == "0" with empty string
[ "$partition" == "0" ] && partition=""

mkzpool=/tmp/mkzpool
echo "#!/bin/bash" >${mkzpool}

for ((start=1, pool=1; pool <= ${pools}; pool+=1, start+=${disks}))
do
  diskids=`ls -l /dev/disk/by-id | grep "$label" | grep -v 'part[0-9]' | awk '{if ($9 !~ /_[0-9]$/) print $0 }' | tail -n+${start} | head -n ${disks} | awk '{printf("/dev/disk/by-id/%s ", $9);}'`
  newids=''
  for d in $diskids
  do
    partitions=`parted $d p | awk '{if ($1 ~ /[0-9]/) print $1}'`
    if [ $wipedisk == "yes" ] 
    then
      for p in $partitions
      do
        zpool list -o name ${path}${pool} || echo parted $d rm $p >>${mkzpool}
      done
    elif [ -n "$partition" ]
    then
      # Append the partition to each diskid from above
      newids="$newids "`echo $d|sed -e 's/ //' -e "s/$/_1-part${partition}/"`
    fi
  done
  [ -n "$newids" ] && diskids=$newids

  zpool list -o name ${poolname}${pool} || echo "zpool create -m ${path}${pool} ${poolname}${pool} ${zpooltype} ${diskids}" >>${mkzpool}
  zpool list -o name ${poolname}${pool} || echo "zfs set atime=off ${poolname}${pool}" >>${mkzpool}
  zpool list -o name ${poolname}${pool} || echo "zfs set xattr=sa ${poolname}${pool}" >>${mkzpool}
  zpool list -o name ${poolname}${pool} || echo "zfs set compression=lz4 ${poolname}${pool}" >>${mkzpool}
  zpool list -o name ${poolname}${pool} || echo "zfs set checksum=fletcher4 ${poolname}${pool}" >>${mkzpool}
  zpool list -o name ${poolname}${pool} || echo "zfs set dedup=off ${poolname}${pool}" >>${mkzpool}
#  zpool list -o name ${path}${pool} || echo "zfs set recordsize=16K ${path}" >>${mkzpool}
done

exit 0
